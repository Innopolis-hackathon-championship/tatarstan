from aiogram import Router
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove
from state.UserStates import UserState

from database.DataBaseController import DataBase
import state.UserStates
from lexicon.lexicon import LEXICON_RU
from aiogram import F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.state import default_state

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()
db = DataBase()


@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    try:
        if db.get_user(message.from_user.id)['auth']:
            await message.answer('–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help', reply_markup=ReplyKeyboardRemove())
            print("aut")
            return
    except:
        await message.answer(text=LEXICON_RU['start'])
        await state.set_state(UserState.auth)


@router.message(StateFilter(UserState.auth))
async def auth_user(message: Message, state: FSMContext):
    auth_key = message.text
    if len(auth_key) != 8:
        await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏‚ùå')
    else:
        print(db.check_auth_key(message.from_user.id, auth_key))
        if db.check_auth_key(message.from_user.id, auth_key):
            db.set_user(user_id=message.from_user.id)
            db.set_user_auth(message.from_user.id)
            await message.answer(
                f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}.üëã\n–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –∏ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–∏.\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –≤–∞—Å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help")
            await state.clear()
            return
        else:
            await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏‚ùå')


@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    user_data = db.get_user(message.from_user.id)
    await message.answer(text=LEXICON_RU[f"/help{user_data['role']}"], reply_markup=ReplyKeyboardRemove())
